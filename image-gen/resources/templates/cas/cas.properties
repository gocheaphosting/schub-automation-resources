#
# Licensed to Jasig under one or more contributor license
# agreements. See the NOTICE file distributed with this work
# for additional information regarding copyright ownership.
# Jasig licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file
# except in compliance with the License.  You may obtain a
# copy of the License at the following location:
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#


######################### reused values #########################
server.name=INSERT_SERVER_NAME_HERE
server.prefix=${server.name}/cas
# IP address or CIDR subnet allowed to access the /status URI of CAS that exposes health check information
cas.securityContext.status.allowedSubnet=0.0.0.0/0

cas.themeResolver.defaultThemeName=cas-theme-default
cas.viewResolver.basename=default_views

##
# Unique CAS node name
host.name=INSERT_NODE_NAME_HERE


######################### new values #########################
# Warn all users of expiration date regardless of warningDays value.
password.policy.warnAll=false

# Threshold number of days to begin displaying password expiration warnings.
password.policy.warningDays=30

# URL to which the user will be redirected to change the password.
password.policy.url=INSERT_PWD_CHANGE_URL_HERE




######################### ldap values #########################
#========================================
# General properties
#========================================
ldap.url=INSERT_LDAP_SERVER_HERE

# LDAP connection timeout in milliseconds
ldap.connectTimeout=3000

# Whether to use StartTLS (probably needed if not SSL connection) # bullshit
ldap.useStartTLS=false

#========================================
# LDAP connection pool configuration
#========================================
ldap.pool.minSize=3
ldap.pool.maxSize=10
ldap.pool.validateOnCheckout=false
ldap.pool.validatePeriodically=true

# Amount of time in milliseconds to block on pool exhausted condition
# before giving up.
ldap.pool.blockWaitTime=3000

# Frequency of connection validation in seconds
# Only applies if validatePeriodically=true
ldap.pool.validatePeriod=300

# Attempt to prune connections every N seconds
ldap.pool.prunePeriod=300

# Maximum amount of time an idle connection is allowed to be in
# pool before it is liable to be removed/destroyed
ldap.pool.idleTime=600

#========================================
# Authentication
#========================================

# Base DN of users to be authenticated
ldap.authn.baseDn=INSERT_USER_BASE_DN_HERE

# Manager DN for authenticated searches
ldap.authn.managerDn=INSERT_LDAP_USER_HERE

# Manager password for authenticated searches
ldap.authn.managerPassword=INSERT_LDAP_PASSWORD_HERE

# Search filter used for configurations that require searching for DNs
#ldap.authn.searchFilter=(&(uid={user})(accountState=active))
ldap.authn.searchFilter=(uid={user})

# Search filter used for configurations that require searching for DNs
#ldap.authn.format=uid=%s,ou=Users,dc=example,dc=org
ldap.authn.format=%s




######################### old values #########################
#cas.securityContext.serviceProperties.service=${server.prefix}/services/j_acegi_cas_security_check
## Names of roles allowed to access the CAS service manager
#cas.securityContext.serviceProperties.adminRoles=ROLE_ADMIN
#cas.securityContext.casProcessingFilterEntryPoint.loginUrl=${server.prefix}/login
#cas.securityContext.ticketValidator.casServerUrlPrefix=${server.prefix}



