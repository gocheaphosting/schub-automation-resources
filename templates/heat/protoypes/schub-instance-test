heat_template_version: 2013-05-23

description: >
  HOT template to deploy an instance of a tentant VM with services
  enabled according to the configuration

parameters:
  key_name:
    type: string
    description: Name of keypair to assign to servers
  image:
    type: string
    description: Name of image to use for servers
  flavor:
    type: string
    description: Flavor to use for servers
# TODO: optionally create networks?
  public_net_id:
    type: string
    description: >
      ID of public network for which floating IP addresses will be allocated
  private_net_id:
    type: string
    description: ID of private network into which servers get deployed
  private_subnet_id:
    type: string
    description: ID of private sub network into which servers get deployed
# NEW
# TODO: list type?
# TODO: pass into VM - via str_replace template into script?
  services_enabled:
    type: string
    description: List of SCHub services to enable on the machine
  user_script:
    type: string
    description: User script to be executed in the VM
  volume_size:
    type: number
    description: The size of the Cinder volume
    default: 1

resources:
  server1:
    type: OS::Nova::Server
    properties:
      name: Server1
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: server1_port }
# NEW
      user_data: { get_param: key_name }
      user_data_format: RAW

# TODO: Volume(s)?
  tenant_vol:
    type: OS::Cinder::Volume
    properties:
      size: { get_param: volume_size }

  vol_att:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: server1 }
      volume_id: { get_resource: tenant_vol }
      mountpoint: /dev/vdb

  server1_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: private_net_id }
      fixed_ips:
        - subnet_id: { get_param: private_subnet_id }
      security_groups: [{ get_resource: server_security_group }]

outputs:
  server1_private_ip:
    description: IP address of server1 in private network
    value: { get_attr: [ server1, first_address ] }